use alloc::boxed::Box;
use alloc::vec;
use alloc::vec::Vec;

use crate::tests::Test;

fn append_stress_tests(_target: &mut Vec<Box<dyn Test>>) {
    #[cfg(feature = "vmulf_stress_test")]
    _target.push(Box::new(super::rsp::stresstests::VMULF {}));
    #[cfg(feature = "vmulu_stress_test")]
    _target.push(Box::new(super::rsp::stresstests::VMULU {}));
    #[cfg(feature = "vmulq_stress_test")]
    _target.push(Box::new(super::rsp::stresstests::VMULQ {}));
    #[cfg(feature = "vmudl_stress_test")]
    _target.push(Box::new(super::rsp::stresstests::VMUDL {}));
    #[cfg(feature = "vmudh_stress_test")]
    _target.push(Box::new(super::rsp::stresstests::VMUDH {}));
    #[cfg(feature = "vmudm_stress_test")]
    _target.push(Box::new(super::rsp::stresstests::VMUDM {}));
    #[cfg(feature = "vmudn_stress_test")]
    _target.push(Box::new(super::rsp::stresstests::VMUDN {}));
    #[cfg(feature = "vmacf_stress_test")]
    _target.push(Box::new(super::rsp::stresstests::VMACF {}));
    #[cfg(feature = "vmacu_stress_test")]
    _target.push(Box::new(super::rsp::stresstests::VMACU {}));
    #[cfg(feature = "vmadl_stress_test")]
    _target.push(Box::new(super::rsp::stresstests::VMADL {}));
    #[cfg(feature = "vmadh_stress_test")]
    _target.push(Box::new(super::rsp::stresstests::VMADH {}));
    #[cfg(feature = "vmadm_stress_test")]
    _target.push(Box::new(super::rsp::stresstests::VMADM {}));
    #[cfg(feature = "vmadn_stress_test")]
    _target.push(Box::new(super::rsp::stresstests::VMADN {}));
    #[cfg(feature = "vrcp32_stress_test")]
    _target.push(Box::new(super::rsp::stresstests_div::VRCP32 {}));
    #[cfg(feature = "vrsq32_stress_test")]
    _target.push(Box::new(super::rsp::stresstests_div::VRSQ32 {}));
    #[cfg(feature = "rcp_rsq_dump")]
    _target.push(Box::new(super::rsp::op_vmov_vrcp::GenerateDump {}));
    #[cfg(feature = "cop1_stress_test")]
    {
        _target.push(Box::new(super::cop1::randomized::StresstestAddS {}));
        _target.push(Box::new(super::cop1::randomized::StresstestAddD {}));
        _target.push(Box::new(super::cop1::randomized::StresstestSubS {}));
        _target.push(Box::new(super::cop1::randomized::StresstestSubD {}));
        _target.push(Box::new(super::cop1::randomized::StresstestMulS {}));
        _target.push(Box::new(super::cop1::randomized::StresstestMulD {}));
        _target.push(Box::new(super::cop1::randomized::StresstestDivS {}));
        _target.push(Box::new(super::cop1::randomized::StresstestDivD {}));
        _target.push(Box::new(super::cop1::randomized::StresstestSqrtS {}));
        _target.push(Box::new(super::cop1::randomized::StresstestSqrtD {}));
        _target.push(Box::new(super::cop1::randomized::StresstestCvtSFromW {}));
        _target.push(Box::new(super::cop1::randomized::StresstestCvtWFromS {}));
    }
}

#[cfg(feature = "quick")]
fn default_tests() -> Vec<Box<dyn Test>> {
    vec! {
        // This should be the overall first test
        Box::new(super::startup::StartupTest {}),
        Box::new(super::address_error_exception::UnalignedLW {}),
        Box::new(super::address_error_exception::UnalignedLW2 {}),
        Box::new(super::address_error_exception::UnalignedLWDelay {}),
        Box::new(super::address_error_exception::UnalignedSW {}),
        Box::new(super::address_error_exception::UnalignedJump {}),
        Box::new(super::address_error_exception::LWAddressNotSignExtended {}),
        Box::new(super::address_error_exception::SWAddressNotSignExtended {}),
        Box::new(super::arithmetic::nemu_port::LUIOpcodeTest1 {}),
        Box::new(super::arithmetic::nemu_port::LUIOpcodeTest2 {}),
        Box::new(super::arithmetic::nemu_port::LUIOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::DADDIOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::DADDIOpcodeTestWithNegativeImmediate {}),
        Box::new(super::arithmetic::nemu_port::DADDIOpcodeTestLargeNegative1 {}),
        Box::new(super::arithmetic::nemu_port::DADDIOpcodeTestLargeNegative2 {}),
        Box::new(super::arithmetic::nemu_port::DADDIOpcodeTestWithR0 {}),
        Box::new(super::arithmetic::nemu_port::DADDIOpcodeTestWithOffsetZero {}),
        Box::new(super::arithmetic::nemu_port::DADDIOpcodeTestWithOffsetZeroAndR0 {}),
        Box::new(super::arithmetic::nemu_port::DADDIOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::DADDIOpcodeTestIntoR0WithOffset0 {}),
        Box::new(super::arithmetic::nemu_port::DADDIUOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::DADDIUOpcodeTestWithNegativeImmediate {}),
        Box::new(super::arithmetic::nemu_port::DADDIUOpcodeTestLargeNegative1 {}),
        Box::new(super::arithmetic::nemu_port::DADDIUOpcodeTestLargeNegative2 {}),
        Box::new(super::arithmetic::nemu_port::DADDIUOpcodeTestWithR0 {}),
        Box::new(super::arithmetic::nemu_port::DADDIUOpcodeTestWithOffsetZero {}),
        Box::new(super::arithmetic::nemu_port::DADDIUOpcodeTestWithOffsetZeroAndR0 {}),
        Box::new(super::arithmetic::nemu_port::DADDIUOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::DADDIUOpcodeTestNoOverflowPositive {}),
        Box::new(super::arithmetic::nemu_port::DADDIUOpcodeTestNoOverflowNegative {}),
        Box::new(super::arithmetic::nemu_port::ADDIOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::ADDIOpcodeTestWithNegativeImmediate {}),
        Box::new(super::arithmetic::nemu_port::ADDIOpcodeTestLower12Bit {}),
        Box::new(super::arithmetic::nemu_port::ADDIOpcodeTestUpper4Bit {}),
        Box::new(super::arithmetic::nemu_port::ADDIOpcodeTestLower12BitNegative {}),
        Box::new(super::arithmetic::nemu_port::ADDIOpcodeTestUpper4BitNegative {}),
        Box::new(super::arithmetic::nemu_port::ADDIOpcodeTestLargeNegative1 {}),
        Box::new(super::arithmetic::nemu_port::ADDIOpcodeTestLargeNegative2 {}),
        Box::new(super::arithmetic::nemu_port::ADDIOpcodeTestWithR0 {}),
        Box::new(super::arithmetic::nemu_port::ADDIOpcodeTestWithOffsetZero {}),
        Box::new(super::arithmetic::nemu_port::ADDIOpcodeTestWithOffsetZeroAndR0 {}),
        Box::new(super::arithmetic::nemu_port::ADDIOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::ADDIOpcodeTestIntoR0WithOffset0 {}),
        Box::new(super::arithmetic::nemu_port::ADDIUOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::ADDIUOpcodeTestWithNegativeImmediate {}),
        Box::new(super::arithmetic::nemu_port::ADDIUOpcodeTestLower12Bit {}),
        Box::new(super::arithmetic::nemu_port::ADDIUOpcodeTestUpper4Bit {}),
        Box::new(super::arithmetic::nemu_port::ADDIUOpcodeTestLower12BitNegative {}),
        Box::new(super::arithmetic::nemu_port::ADDIUOpcodeTestUpper4BitNegative {}),
        Box::new(super::arithmetic::nemu_port::ADDIUOpcodeTestLargeNegative1 {}),
        Box::new(super::arithmetic::nemu_port::ADDIUOpcodeTestLargeNegative2 {}),
        Box::new(super::arithmetic::nemu_port::ADDIUOpcodeTestWithR0 {}),
        Box::new(super::arithmetic::nemu_port::ADDIUOpcodeTestWithOffsetZero {}),
        Box::new(super::arithmetic::nemu_port::ADDIUOpcodeTestWithOffsetZeroAndR0 {}),
        Box::new(super::arithmetic::nemu_port::ADDIUOpcodeTestWithOffsetZeroIntoItself {}),
        Box::new(super::arithmetic::nemu_port::ADDIUOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::SLTIOpcodeTest1 {}),
        Box::new(super::arithmetic::nemu_port::SLTIOpcodeTest2 {}),
        Box::new(super::arithmetic::nemu_port::SLTIOpcodeTest3 {}),
        Box::new(super::arithmetic::nemu_port::SLTIOpcodeTest4 {}),
        Box::new(super::arithmetic::nemu_port::SLTIOpcodeTest5 {}),
        Box::new(super::arithmetic::nemu_port::SLTIOpcodeTest6 {}),
        Box::new(super::arithmetic::nemu_port::SLTIOpcodeTestEqual {}),
        Box::new(super::arithmetic::nemu_port::SLTIOpcodeTestWithR0 {}),
        Box::new(super::arithmetic::nemu_port::SLTIOpcodeTestWithR0_1 {}),
        Box::new(super::arithmetic::nemu_port::SLTIOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::SLTIOpcodeTestPositiveAgainst0 {}),
        Box::new(super::arithmetic::nemu_port::SLTIOpcodeTestNegativeAgainst0 {}),
        Box::new(super::arithmetic::nemu_port::SLTIOpcodeTestR0Against0 {}),
        Box::new(super::arithmetic::nemu_port::SLTIUOpcodeTest1 {}),
        Box::new(super::arithmetic::nemu_port::SLTIUOpcodeTest2 {}),
        Box::new(super::arithmetic::nemu_port::SLTIUOpcodeTest3 {}),
        Box::new(super::arithmetic::nemu_port::SLTIUOpcodeTest4 {}),
        Box::new(super::arithmetic::nemu_port::SLTIUOpcodeTestEqual {}),
        Box::new(super::arithmetic::nemu_port::SLTIUOpcodeTestWithR0 {}),
        Box::new(super::arithmetic::nemu_port::SLTIUOpcodeTestWithR0_1 {}),
        Box::new(super::arithmetic::nemu_port::SLTIUOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::SLTIUOpcodeTestPositiveAgainst0 {}),
        Box::new(super::arithmetic::nemu_port::SLTIUOpcodeTestNegativeAgainst0 {}),
        Box::new(super::arithmetic::nemu_port::SLTIUOpcodeTestR0Against0 {}),
        Box::new(super::arithmetic::nemu_port::OROpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::OROpcodeTestRTIsR0 {}),
        Box::new(super::arithmetic::nemu_port::OROpcodeTestRSIsR0 {}),
        Box::new(super::arithmetic::nemu_port::OROpcodeTestBothAreR0 {}),
        Box::new(super::arithmetic::nemu_port::OROpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::OROpcodeTestWithItself {}),
        Box::new(super::arithmetic::nemu_port::OROpcodeTestInputOutput1 {}),
        Box::new(super::arithmetic::nemu_port::OROpcodeTestInputOutput2 {}),
        Box::new(super::arithmetic::nemu_port::OROpcodeTestInputOutput3 {}),
        Box::new(super::arithmetic::nemu_port::ANDOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::ANDOpcodeTestRTIsR0 {}),
        Box::new(super::arithmetic::nemu_port::ANDOpcodeTestRSIsR0 {}),
        Box::new(super::arithmetic::nemu_port::ANDOpcodeTestBothAreR0 {}),
        Box::new(super::arithmetic::nemu_port::ANDOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::ANDOpcodeTestWithItself {}),
        Box::new(super::arithmetic::nemu_port::ANDOpcodeTestInputOutput1 {}),
        Box::new(super::arithmetic::nemu_port::ANDOpcodeTestInputOutput2 {}),
        Box::new(super::arithmetic::nemu_port::ANDOpcodeTestInputOutput3 {}),
        Box::new(super::arithmetic::nemu_port::XOROpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::XOROpcodeTestRTIsR0 {}),
        Box::new(super::arithmetic::nemu_port::XOROpcodeTestRSIsR0 {}),
        Box::new(super::arithmetic::nemu_port::XOROpcodeTestBothAreR0 {}),
        Box::new(super::arithmetic::nemu_port::XOROpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::XOROpcodeTestWithItself {}),
        Box::new(super::arithmetic::nemu_port::XOROpcodeTestInputOutput1 {}),
        Box::new(super::arithmetic::nemu_port::XOROpcodeTestInputOutput2 {}),
        Box::new(super::arithmetic::nemu_port::XOROpcodeTestInputOutput3 {}),
        Box::new(super::arithmetic::nemu_port::NOROpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::NOROpcodeTestRTIsR0 {}),
        Box::new(super::arithmetic::nemu_port::NOROpcodeTestRSIsR0 {}),
        Box::new(super::arithmetic::nemu_port::NOROpcodeTestBothAreR0 {}),
        Box::new(super::arithmetic::nemu_port::NOROpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::NOROpcodeTestWithItself {}),
        Box::new(super::arithmetic::nemu_port::NOROpcodeTestInputOutput1 {}),
        Box::new(super::arithmetic::nemu_port::NOROpcodeTestInputOutput2 {}),
        Box::new(super::arithmetic::nemu_port::NOROpcodeTestInputOutput3 {}),
        Box::new(super::arithmetic::nemu_port::SLTOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::SLTOpcodeTest2 {}),
        Box::new(super::arithmetic::nemu_port::SLTOpcodeTest3 {}),
        Box::new(super::arithmetic::nemu_port::SLTOpcodeTest4 {}),
        Box::new(super::arithmetic::nemu_port::SLTOpcodeTest5 {}),
        Box::new(super::arithmetic::nemu_port::SLTOpcodeTest6 {}),
        Box::new(super::arithmetic::nemu_port::SLTOpcodeTest7 {}),
        Box::new(super::arithmetic::nemu_port::SLTOpcodeTest8 {}),
        Box::new(super::arithmetic::nemu_port::SLTOpcodeTestWithSelf {}),
        Box::new(super::arithmetic::nemu_port::SLTOpcodeTestWithR0Pos {}),
        Box::new(super::arithmetic::nemu_port::SLTOpcodeTestWithR0Neg {}),
        Box::new(super::arithmetic::nemu_port::SLTOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::SLTUOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::SLTUOpcodeTest2 {}),
        Box::new(super::arithmetic::nemu_port::SLTUOpcodeTest3 {}),
        Box::new(super::arithmetic::nemu_port::SLTUOpcodeTest4 {}),
        Box::new(super::arithmetic::nemu_port::SLTUOpcodeTest5 {}),
        Box::new(super::arithmetic::nemu_port::SLTUOpcodeTest6 {}),
        Box::new(super::arithmetic::nemu_port::SLTUOpcodeTest7 {}),
        Box::new(super::arithmetic::nemu_port::SLTUOpcodeTest8 {}),
        Box::new(super::arithmetic::nemu_port::SLTUOpcodeTestWithSelf {}),
        Box::new(super::arithmetic::nemu_port::SLTUOpcodeTestWithR0Pos {}),
        Box::new(super::arithmetic::nemu_port::SLTUOpcodeTestWithR0Neg {}),
        Box::new(super::arithmetic::nemu_port::SLTUOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::ORIOpcodeTest1 {}),
        Box::new(super::arithmetic::nemu_port::ORIOpcodeTest2 {}),
        Box::new(super::arithmetic::nemu_port::ORIOpcodeTest3 {}),
        Box::new(super::arithmetic::nemu_port::ORIOpcodeTest4 {}),
        Box::new(super::arithmetic::nemu_port::ORIOpcodeTestWithR0 {}),
        Box::new(super::arithmetic::nemu_port::ORIOpcodeTestWithOffsetZero {}),
        Box::new(super::arithmetic::nemu_port::ORIOpcodeTestWithOffsetZeroAndR0 {}),
        Box::new(super::arithmetic::nemu_port::ORIOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::ANDIOpcodeTest1 {}),
        Box::new(super::arithmetic::nemu_port::ANDIOpcodeTest2 {}),
        Box::new(super::arithmetic::nemu_port::ANDIOpcodeTest3 {}),
        Box::new(super::arithmetic::nemu_port::ANDIOpcodeTest4 {}),
        Box::new(super::arithmetic::nemu_port::ANDIOpcodeTest5 {}),
        Box::new(super::arithmetic::nemu_port::ANDIOpcodeTestWithR0 {}),
        Box::new(super::arithmetic::nemu_port::ANDIOpcodeTestWithOffsetZero {}),
        Box::new(super::arithmetic::nemu_port::ANDIOpcodeTestWithOffsetZeroAndR0 {}),
        Box::new(super::arithmetic::nemu_port::ANDIOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::XORIOpcodeTest1 {}),
        Box::new(super::arithmetic::nemu_port::XORIOpcodeTest2 {}),
        Box::new(super::arithmetic::nemu_port::XORIOpcodeTest3 {}),
        Box::new(super::arithmetic::nemu_port::XORIOpcodeTest4 {}),
        Box::new(super::arithmetic::nemu_port::XORIOpcodeTest5 {}),
        Box::new(super::arithmetic::nemu_port::XORIOpcodeTestWithR0 {}),
        Box::new(super::arithmetic::nemu_port::XORIOpcodeTestWithOffsetZero {}),
        Box::new(super::arithmetic::nemu_port::XORIOpcodeTestWithOffsetZeroAndR0 {}),
        Box::new(super::arithmetic::nemu_port::XORIOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::ADDOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::ADDOpcodeTestInputOutput1 {}),
        Box::new(super::arithmetic::nemu_port::ADDOpcodeTestInputOutput2 {}),
        Box::new(super::arithmetic::nemu_port::ADDOpcodeTestInputOutput3 {}),
        Box::new(super::arithmetic::nemu_port::ADDOpcodeTestRTIsR0 {}),
        Box::new(super::arithmetic::nemu_port::ADDOpcodeTestRSIsR0 {}),
        Box::new(super::arithmetic::nemu_port::ADDOpcodeTestBothAreR0 {}),
        Box::new(super::arithmetic::nemu_port::ADDOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::ADDOpcodeTestWithItself {}),
        Box::new(super::arithmetic::nemu_port::ADDUOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::ADDUOpcodeTestInputOutput1 {}),
        Box::new(super::arithmetic::nemu_port::ADDUOpcodeTestInputOutput2 {}),
        Box::new(super::arithmetic::nemu_port::ADDUOpcodeTestInputOutput3 {}),
        Box::new(super::arithmetic::nemu_port::ADDUOpcodeTestRTIsR0 {}),
        Box::new(super::arithmetic::nemu_port::ADDUOpcodeTestRSIsR0 {}),
        Box::new(super::arithmetic::nemu_port::ADDUOpcodeTestBothAreR0 {}),
        Box::new(super::arithmetic::nemu_port::ADDUOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::ADDUOpcodeTestWithItself {}),
        Box::new(super::arithmetic::nemu_port::DADDOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::DADDOpcodeTestInputOutput1 {}),
        Box::new(super::arithmetic::nemu_port::DADDOpcodeTestInputOutput2 {}),
        Box::new(super::arithmetic::nemu_port::DADDOpcodeTestInputOutput3 {}),
        Box::new(super::arithmetic::nemu_port::DADDOpcodeTestRTIsR0 {}),
        Box::new(super::arithmetic::nemu_port::DADDOpcodeTestRSIsR0 {}),
        Box::new(super::arithmetic::nemu_port::DADDOpcodeTestBothAreR0 {}),
        Box::new(super::arithmetic::nemu_port::DADDOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::DADDOpcodeTestWithItself {}),
        Box::new(super::arithmetic::nemu_port::DADDUOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::DADDUOpcodeTestInputOutput1 {}),
        Box::new(super::arithmetic::nemu_port::DADDUOpcodeTestInputOutput2 {}),
        Box::new(super::arithmetic::nemu_port::DADDUOpcodeTestInputOutput3 {}),
        Box::new(super::arithmetic::nemu_port::DADDUOpcodeTestRTIsR0 {}),
        Box::new(super::arithmetic::nemu_port::DADDUOpcodeTestRSIsR0 {}),
        Box::new(super::arithmetic::nemu_port::DADDUOpcodeTestBothAreR0 {}),
        Box::new(super::arithmetic::nemu_port::DADDUOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::DADDUOpcodeTestWithItself {}),
        Box::new(super::arithmetic::nemu_port::SUBOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::SUBOpcodeTestInputOutput1 {}),
        Box::new(super::arithmetic::nemu_port::SUBOpcodeTestInputOutput2 {}),
        Box::new(super::arithmetic::nemu_port::SUBOpcodeTestInputOutput3 {}),
        Box::new(super::arithmetic::nemu_port::SUBOpcodeTestRTIsR0 {}),
        Box::new(super::arithmetic::nemu_port::SUBOpcodeTestRSIsR0 {}),
        Box::new(super::arithmetic::nemu_port::SUBOpcodeTestBothAreR0 {}),
        Box::new(super::arithmetic::nemu_port::SUBOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::SUBOpcodeTestWithItself {}),
        Box::new(super::arithmetic::nemu_port::SUBUOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::SUBUOpcodeTestInputOutput1 {}),
        Box::new(super::arithmetic::nemu_port::SUBUOpcodeTestInputOutput2 {}),
        Box::new(super::arithmetic::nemu_port::SUBUOpcodeTestInputOutput3 {}),
        Box::new(super::arithmetic::nemu_port::SUBUOpcodeTestRTIsR0 {}),
        Box::new(super::arithmetic::nemu_port::SUBUOpcodeTestRSIsR0 {}),
        Box::new(super::arithmetic::nemu_port::SUBUOpcodeTestBothAreR0 {}),
        Box::new(super::arithmetic::nemu_port::SUBUOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::SUBUOpcodeTestWithItself {}),
        Box::new(super::arithmetic::nemu_port::DSUBOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::DSUBOpcodeTestInputOutput1 {}),
        Box::new(super::arithmetic::nemu_port::DSUBOpcodeTestInputOutput2 {}),
        Box::new(super::arithmetic::nemu_port::DSUBOpcodeTestInputOutput3 {}),
        Box::new(super::arithmetic::nemu_port::DSUBOpcodeTestRTIsR0 {}),
        Box::new(super::arithmetic::nemu_port::DSUBOpcodeTestRSIsR0 {}),
        Box::new(super::arithmetic::nemu_port::DSUBOpcodeTestBothAreR0 {}),
        Box::new(super::arithmetic::nemu_port::DSUBOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::DSUBOpcodeTestWithItself {}),
        Box::new(super::arithmetic::nemu_port::DSUBUOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::DSUBUOpcodeTestInputOutput1 {}),
        Box::new(super::arithmetic::nemu_port::DSUBUOpcodeTestInputOutput2 {}),
        Box::new(super::arithmetic::nemu_port::DSUBUOpcodeTestInputOutput3 {}),
        Box::new(super::arithmetic::nemu_port::DSUBUOpcodeTestRTIsR0 {}),
        Box::new(super::arithmetic::nemu_port::DSUBUOpcodeTestRSIsR0 {}),
        Box::new(super::arithmetic::nemu_port::DSUBUOpcodeTestBothAreR0 {}),
        Box::new(super::arithmetic::nemu_port::DSUBUOpcodeTestIntoR0 {}),
        Box::new(super::arithmetic::nemu_port::DSUBUOpcodeTestWithItself {}),
        Box::new(super::arithmetic::nemu_port::DSUBUOpcodeTestNoOverflowNegativeMinusPositive {}),
        Box::new(super::arithmetic::nemu_port::SLLOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::SLLOpcodeTestShift0 {}),
        Box::new(super::arithmetic::nemu_port::SLLOpcodeTestSignExtension {}),
        Box::new(super::arithmetic::nemu_port::SLLOpcodeTestIntoItself {}),
        Box::new(super::arithmetic::nemu_port::SLLOpcodeTestIntoItself0 {}),
        Box::new(super::arithmetic::nemu_port::SLLOpcodeTestIntoR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::SLLOpcodeTestFromR0 {}),
        Box::new(super::arithmetic::nemu_port::SLLOpcodeTestFromR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::SLLVOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::SLLVOpcodeTestShift0 {}),
        Box::new(super::arithmetic::nemu_port::SLLVOpcodeTestShiftTargetAndSourceSame1 {}),
        Box::new(super::arithmetic::nemu_port::SLLVOpcodeTestShiftTargetAndSourceSame2 {}),
        Box::new(super::arithmetic::nemu_port::SLLVOpcodeTestShiftTargetAndSourceSame3 {}),
        Box::new(super::arithmetic::nemu_port::SLLVOpcodeTestShiftTooLarge {}),
        Box::new(super::arithmetic::nemu_port::SLLVOpcodeTestSignExtension {}),
        Box::new(super::arithmetic::nemu_port::SLLVOpcodeTestIntoItself {}),
        Box::new(super::arithmetic::nemu_port::SLLVOpcodeTestIntoItself0 {}),
        Box::new(super::arithmetic::nemu_port::SLLVOpcodeTestIntoR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::SLLVOpcodeTestFromR0 {}),
        Box::new(super::arithmetic::nemu_port::SLLVOpcodeTestFromR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSLL32OpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::DSLL32OpcodeTestShift0 {}),
        Box::new(super::arithmetic::nemu_port::DSLL32OpcodeTestIntoItself {}),
        Box::new(super::arithmetic::nemu_port::DSLL32OpcodeTestIntoItself0 {}),
        Box::new(super::arithmetic::nemu_port::DSLL32OpcodeTestIntoR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSLL32OpcodeTestFromR0 {}),
        Box::new(super::arithmetic::nemu_port::DSLL32OpcodeTestFromR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSLLOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::DSLLOpcodeTestShift0 {}),
        Box::new(super::arithmetic::nemu_port::DSLLOpcodeTestIntoItself {}),
        Box::new(super::arithmetic::nemu_port::DSLLOpcodeTestIntoItself0 {}),
        Box::new(super::arithmetic::nemu_port::DSLLOpcodeTestIntoR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSLLOpcodeTestFromR0 {}),
        Box::new(super::arithmetic::nemu_port::DSLLOpcodeTestFromR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSLLVOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::DSLLVOpcodeTestShift0 {}),
        Box::new(super::arithmetic::nemu_port::DSLLVOpcodeTestShift1 {}),
        Box::new(super::arithmetic::nemu_port::DSLLVOpcodeTestShiftTargetAndSourceSame1 {}),
        Box::new(super::arithmetic::nemu_port::DSLLVOpcodeTestShiftTargetAndSourceSame2 {}),
        Box::new(super::arithmetic::nemu_port::DSLLVOpcodeTestShiftTargetAndSourceSame3 {}),
        Box::new(super::arithmetic::nemu_port::DSLLVOpcodeTestShiftTooLarge {}),
        Box::new(super::arithmetic::nemu_port::DSLLVOpcodeTestIntoItself {}),
        Box::new(super::arithmetic::nemu_port::DSLLVOpcodeTestIntoItself0 {}),
        Box::new(super::arithmetic::nemu_port::DSLLVOpcodeTestIntoR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSLLVOpcodeTestFromR0 {}),
        Box::new(super::arithmetic::nemu_port::DSLLVOpcodeTestFromR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::SRLOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::SRLOpcodeTestShift0 {}),
        Box::new(super::arithmetic::nemu_port::SRLOpcodeTestIntoItself {}),
        Box::new(super::arithmetic::nemu_port::SRLOpcodeTestIntoItself0 {}),
        Box::new(super::arithmetic::nemu_port::SRLOpcodeTestIntoR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::SRLOpcodeTestFromR0 {}),
        Box::new(super::arithmetic::nemu_port::SRLOpcodeTestFromR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::SRLVOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::SRLVOpcodeTestShift0 {}),
        Box::new(super::arithmetic::nemu_port::SRLVOpcodeTestShiftTargetAndSourceSame1 {}),
        Box::new(super::arithmetic::nemu_port::SRLVOpcodeTestShiftTargetAndSourceSame2 {}),
        Box::new(super::arithmetic::nemu_port::SRLVOpcodeTestShiftTargetAndSourceSame3 {}),
        Box::new(super::arithmetic::nemu_port::SRLVOpcodeTestShiftTargetAndSourceSame4 {}),
        Box::new(super::arithmetic::nemu_port::SRLVOpcodeTestShiftTooLarge {}),
        Box::new(super::arithmetic::nemu_port::SRLVOpcodeTestIntoItself {}),
        Box::new(super::arithmetic::nemu_port::SRLVOpcodeTestIntoItself0 {}),
        Box::new(super::arithmetic::nemu_port::SRLVOpcodeTestIntoR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::SRLVOpcodeTestFromR0 {}),
        Box::new(super::arithmetic::nemu_port::SRLVOpcodeTestFromR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRL32OpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::DSRL32OpcodeTestShift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRL32OpcodeTestIntoItself {}),
        Box::new(super::arithmetic::nemu_port::DSRL32OpcodeTestIntoItself0 {}),
        Box::new(super::arithmetic::nemu_port::DSRL32OpcodeTestIntoR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRL32OpcodeTestFromR0 {}),
        Box::new(super::arithmetic::nemu_port::DSRL32OpcodeTestFromR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRLOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::DSRLOpcodeTestShift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRLOpcodeTestIntoItself {}),
        Box::new(super::arithmetic::nemu_port::DSRLOpcodeTestIntoItself0 {}),
        Box::new(super::arithmetic::nemu_port::DSRLOpcodeTestIntoR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRLOpcodeTestFromR0 {}),
        Box::new(super::arithmetic::nemu_port::DSRLOpcodeTestFromR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRLVOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::DSRLVOpcodeTestShift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRLVOpcodeTestShift1 {}),
        Box::new(super::arithmetic::nemu_port::DSRLVOpcodeTestShiftTargetAndSourceSame1 {}),
        Box::new(super::arithmetic::nemu_port::DSRLVOpcodeTestShiftTargetAndSourceSame2 {}),
        Box::new(super::arithmetic::nemu_port::DSRLVOpcodeTestShiftTargetAndSourceSame3 {}),
        Box::new(super::arithmetic::nemu_port::DSRLVOpcodeTestShiftTargetAndSourceSame4 {}),
        Box::new(super::arithmetic::nemu_port::DSRLVOpcodeTestShiftTooLarge {}),
        Box::new(super::arithmetic::nemu_port::DSRLVOpcodeTestIntoItself {}),
        Box::new(super::arithmetic::nemu_port::DSRLVOpcodeTestIntoItself0 {}),
        Box::new(super::arithmetic::nemu_port::DSRLVOpcodeTestIntoR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRLVOpcodeTestFromR0 {}),
        Box::new(super::arithmetic::nemu_port::DSRLVOpcodeTestFromR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::SRAOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::SRAOpcodeTest2 {}),
        Box::new(super::arithmetic::nemu_port::SRAOpcodeTestShift0 {}),
        Box::new(super::arithmetic::nemu_port::SRAOpcodeTestIntoItself {}),
        Box::new(super::arithmetic::nemu_port::SRAOpcodeTestIntoItself0 {}),
        Box::new(super::arithmetic::nemu_port::SRAOpcodeTestIntoR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::SRAOpcodeTestFromR0 {}),
        Box::new(super::arithmetic::nemu_port::SRAOpcodeTestFromR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::SRAVOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::SRAVOpcodeTest2 {}),
        Box::new(super::arithmetic::nemu_port::SRAVOpcodeTestShift0 {}),
        Box::new(super::arithmetic::nemu_port::SRAVOpcodeTestShiftTargetAndSourceSame1 {}),
        Box::new(super::arithmetic::nemu_port::SRAVOpcodeTestShiftTargetAndSourceSame2 {}),
        Box::new(super::arithmetic::nemu_port::SRAVOpcodeTestShiftTargetAndSourceSame3 {}),
        Box::new(super::arithmetic::nemu_port::SRAVOpcodeTestShiftTargetAndSourceSame4 {}),
        Box::new(super::arithmetic::nemu_port::SRAVOpcodeTestShiftTooLarge {}),
        Box::new(super::arithmetic::nemu_port::SRAVOpcodeTestIntoItself {}),
        Box::new(super::arithmetic::nemu_port::SRAVOpcodeTestIntoItself0 {}),
        Box::new(super::arithmetic::nemu_port::SRAVOpcodeTestIntoR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::SRAVOpcodeTestFromR0 {}),
        Box::new(super::arithmetic::nemu_port::SRAVOpcodeTestFromR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRA32OpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::DSRA32OpcodeTestShift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRA32OpcodeTestIntoItself {}),
        Box::new(super::arithmetic::nemu_port::DSRA32OpcodeTestIntoItself0 {}),
        Box::new(super::arithmetic::nemu_port::DSRA32OpcodeTestIntoR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRA32OpcodeTestFromR0 {}),
        Box::new(super::arithmetic::nemu_port::DSRA32OpcodeTestFromR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRAOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::DSRAOpcodeTestShift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRAOpcodeTestIntoItself {}),
        Box::new(super::arithmetic::nemu_port::DSRAOpcodeTestIntoItself0 {}),
        Box::new(super::arithmetic::nemu_port::DSRAOpcodeTestIntoR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRAOpcodeTestFromR0 {}),
        Box::new(super::arithmetic::nemu_port::DSRAOpcodeTestFromR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRAVOpcodeTest {}),
        Box::new(super::arithmetic::nemu_port::DSRAVOpcodeTestShift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRAVOpcodeTestShift1 {}),
        Box::new(super::arithmetic::nemu_port::DSRAVOpcodeTestShiftTargetAndSourceSame1 {}),
        Box::new(super::arithmetic::nemu_port::DSRAVOpcodeTestShiftTargetAndSourceSame2 {}),
        Box::new(super::arithmetic::nemu_port::DSRAVOpcodeTestShiftTargetAndSourceSame3 {}),
        Box::new(super::arithmetic::nemu_port::DSRAVOpcodeTestShiftTargetAndSourceSame4 {}),
        Box::new(super::arithmetic::nemu_port::DSRAVOpcodeTestShiftTooLarge {}),
        Box::new(super::arithmetic::nemu_port::DSRAVOpcodeTestIntoItself {}),
        Box::new(super::arithmetic::nemu_port::DSRAVOpcodeTestIntoItself0 {}),
        Box::new(super::arithmetic::nemu_port::DSRAVOpcodeTestIntoR0Shift0 {}),
        Box::new(super::arithmetic::nemu_port::DSRAVOpcodeTestFromR0 {}),
        Box::new(super::arithmetic::nemu_port::DSRAVOpcodeTestFromR0Shift0 {}),
        Box::new(super::arithmetic::shifts::SRA {}),
        Box::new(super::arithmetic::shifts::SRL {}),
        Box::new(super::arithmetic::shifts::SLL {}),
        Box::new(super::arithmetic::shifts::ShiftsIntoR0 {}),
        Box::new(super::arithmetic::div::DIV {}),
        Box::new(super::arithmetic::div::DIVU {}),
        Box::new(super::arithmetic::div::DDIV {}),
        Box::new(super::arithmetic::div::DDIVU {}),
        Box::new(super::cart_memory::LW {}),
        Box::new(super::cart_memory::LH {}),
        Box::new(super::cart_memory::LB {}),
        Box::new(super::cart_memory::write::WriteAndReadback {}),
        Box::new(super::cart_memory::write::WriteAndReadback2 {}),
        Box::new(super::cart_memory::write::WriteAndReadback3 {}),
        Box::new(super::cart_memory::write::WriteAndReadback4 {}),
        Box::new(super::cart_memory::write::WriteAndReadback5 {}),
        Box::new(super::cart_memory::write::DecayAfterSomeClockCycles {}),
        Box::new(super::cart_memory::write::Write32AndReadback8 {}),
        Box::new(super::cart_memory::write::Write32AndReadback16 {}),
        Box::new(super::cart_memory::write::Write8AndReadback32 {}),
        Box::new(super::cart_memory::write::Write8WithOffsetAndReadback32 {}),
        Box::new(super::cart_memory::write::Write16AndReadback32 {}),
        Box::new(super::cart_memory::write::Write64AndReadback32 {}),
        Box::new(super::cart_memory::write::WriteAndCheckPIFlag {}),
        Box::new(super::cart_memory::dma::CartAddressMasking {}),
        Box::new(super::cart_memory::dma::PIDMA {}),
        Box::new(super::cop0::IndexMasking),
        Box::new(super::cop0::RandomDecrement),
        Box::new(super::cop0::RandomMasking),
        Box::new(super::cop0::RandomReadEarly),
        Box::new(super::cop0::ContextMasking {}),
        Box::new(super::cop0::WiredMasking),
        Box::new(super::cop0::ContextMixedBitWriting {}),
        Box::new(super::cop0::XContextMasking {}),
        Box::new(super::cop0::XContextMaskingMixed {}),
        Box::new(super::cop0::BadVAddrReadOnly {}),
        Box::new(super::cop0::ExceptPCNoMasking {}),
        Box::new(super::cop0::ErrorEPCNoMasking {}),
        Box::new(super::cop0::LLAddrIs32Bit {}),
        Box::new(super::cop0::StatusIs32Bit {}),
        Box::new(super::cop0::StatusMasking),
        Box::new(super::cop0::ConfigMasking),
        Box::new(super::cop0::ProcessorRevisionIdMasking),
        Box::new(super::cop0::UnusedRegistersExtraMtc0),
        Box::new(super::cop0::UnusedRegistersExtraUnrelated),
        Box::new(super::cop0::UnusedRegistersWriteRead),
        Box::new(super::cop0::ParityErrorMasking),
        Box::new(super::cop0::CacheErrorMasking),
        Box::new(super::cop1::CFC1CTC1_0),
        Box::new(super::cop1::CFC1CTC1_31),
        Box::new(super::cop1::full_vs_half_mode::FullMode),
        Box::new(super::cop1::full_vs_half_mode::HalfMode),
        Box::new(super::cop1::full_vs_half_mode::MixedMode),
        Box::new(super::cop1::full_vs_half_mode::UpperBitsOf32BitOperationFull),
        Box::new(super::cop1::full_vs_half_mode::UpperBitsOf32BitOperationHalf),
        Box::new(super::cop1::full_vs_half_mode::UpperBitsOf32BitConversionHalf),
        Box::new(super::cop1::full_vs_half_mode::HalfMode64BitOperationsWithOddIndex),
        Box::new(super::cop1::full_vs_half_mode::HalfMode64BitConversionsWithOddIndex),
        Box::new(super::cop1::full_vs_half_mode::ComparisonInHalfModeWithOddRegisters),
        Box::new(super::cop1::full_vs_half_mode::LWC1InHalfMode),
        Box::new(super::cop1::full_vs_half_mode::LDC1InHalfMode),
        Box::new(super::cop1::full_vs_half_mode::SWC1InHalfMode),
        Box::new(super::cop1::full_vs_half_mode::SDC1InHalfMode),
        Box::new(super::cop1::full_vs_half_mode::MTC1InHalfMode),
        Box::new(super::cop1::full_vs_half_mode::DMTC1InHalfMode),
        Box::new(super::cop1::full_vs_half_mode::MFC1InHalfMode),
        Box::new(super::cop1::full_vs_half_mode::DMFC1InHalfMode),
        Box::new(super::cop1::FireExceptionViaCTC1),
        Box::new(super::cop1::FireUnimplementedExceptionViaCTC1),
        Box::new(super::cop1::FireExceptionViaCTC1FollowedByMFC1),
        Box::new(super::cop1::FireExceptionViaCTC1FollowedByMFC2),
        Box::new(super::cop1::FireExceptionViaCTC1Delay),
        Box::new(super::cop1::LWC1PreservingFCSR),
        Box::new(super::cop1::SWC1PreservingFCSR),
        Box::new(super::cop1::LDC1PreservingFCSR),
        Box::new(super::cop1::SDC1PreservingFCSR),
        Box::new(super::cop1::AddS),
        Box::new(super::cop1::AddD),
        Box::new(super::cop1::SubS),
        Box::new(super::cop1::SubD),
        Box::new(super::cop1::MulS),
        Box::new(super::cop1::MulD),
        Box::new(super::cop1::DivS),
        Box::new(super::cop1::DivD),
        Box::new(super::cop1::AbsS),
        Box::new(super::cop1::AbsD),
        Box::new(super::cop1::NegS),
        Box::new(super::cop1::NegD),
        Box::new(super::cop1::MovS),
        Box::new(super::cop1::MovD),
        Box::new(super::cop1::SqrtS),
        Box::new(super::cop1::SqrtD),
        Box::new(super::cop1::CvtS),
        Box::new(super::cop1::CvtD),
        Box::new(super::cop1::ConvertToW),
        Box::new(super::cop1::ConvertToL),
        Box::new(super::cop1::compares::C_F),
        Box::new(super::cop1::compares::C_UN),
        Box::new(super::cop1::compares::C_EQ),
        Box::new(super::cop1::compares::C_UEQ),
        Box::new(super::cop1::compares::C_OLT),
        Box::new(super::cop1::compares::C_ULT),
        Box::new(super::cop1::compares::C_OLE),
        Box::new(super::cop1::compares::C_ULE),
        Box::new(super::cop1::compares::C_SF),
        Box::new(super::cop1::compares::C_NGLE),
        Box::new(super::cop1::compares::C_SEQ),
        Box::new(super::cop1::compares::C_NGL),
        Box::new(super::cop1::compares::C_LT),
        Box::new(super::cop1::compares::C_NGE),
        Box::new(super::cop1::compares::C_LE),
        Box::new(super::cop1::compares::C_NGT),
        Box::new(super::cop1::randomized::AddS),
        Box::new(super::cop1::randomized::AddD),
        Box::new(super::cop1::randomized::SubS),
        Box::new(super::cop1::randomized::SubD),
        Box::new(super::cop1::randomized::MulS),
        Box::new(super::cop1::randomized::MulD),
        Box::new(super::cop1::randomized::DivS),
        Box::new(super::cop1::randomized::DivD),
        Box::new(super::cop1::randomized::SqrtS),
        Box::new(super::cop1::randomized::SqrtD),
        Box::new(super::cop1::randomized::CvtSFromW),
        Box::new(super::cop1::randomized::CvtWFromS),
        Box::new(super::cop_unusable::COP3Usable {}),
        Box::new(super::cop_unusable::COP2Usable {}),
        Box::new(super::cop_unusable::COP1Usable {}),
        Box::new(super::cop_unusable::COP0Usable {}),
        Box::new(super::cop_unusable::COP1UsableLWC1 {}),
        Box::new(super::cop_unusable::COP1UsableLDC1 {}),
        Box::new(super::cop_unusable::COP1UsableSWC1 {}),
        Box::new(super::cop_unusable::COP1UsableSDC1 {}),
        Box::new(super::cop_unusable::COP1UsableMFC1 {}),
        Box::new(super::cop_unusable::COP1UsableMTC1 {}),
        Box::new(super::cop_unusable::COP1UsableDMFC1 {}),
        Box::new(super::cop_unusable::COP1UsableDMTC1 {}),
        Box::new(super::cop_unusable::COP1UsableCFC1 {}),
        Box::new(super::cop_unusable::COP1UsableCTC1 {}),
        Box::new(super::cop_unusable::COP1UsableDCFC1 {}),
        Box::new(super::cop_unusable::COP1UsableDCTC1 {}),
        Box::new(super::cop_unusable::COP2UsableMFC2 {}),
        Box::new(super::cop_unusable::COP2UsableMTC2 {}),
        Box::new(super::cop_unusable::COP2UsableDMFC2 {}),
        Box::new(super::cop_unusable::COP2UsableDMTC2 {}),
        Box::new(super::cop_unusable::COP2UsableCFC2 {}),
        Box::new(super::cop_unusable::COP2UsableCTC2 {}),
        Box::new(super::cop_unusable::COP2UsableDCFC2 {}),
        Box::new(super::cop_unusable::COP2UsableDCTC2 {}),
        Box::new(super::cop_unusable::COP3UsableMFC3 {}),
        Box::new(super::cop_unusable::COP2MFCBehavior {}),
        Box::new(super::cop_unusable::COP2LWC2Behavior {}),
        Box::new(super::exception_instructions::Break {}),
        Box::new(super::exception_instructions::BreakDelay {}),
        Box::new(super::exception_instructions::Syscall {}),
        Box::new(super::exception_instructions::SyscallDelay {}),
        Box::new(super::exception_instructions::Reserved31 {}),
        Box::new(super::exception_instructions::Reserved31Delay {}),
        Box::new(super::jumps::conditionals::BEQWithinDelay {}),
        Box::new(super::jumps::conditionals::BEQNotTakenWithinDelay {}),
        Box::new(super::jumps::conditionals::BEQWithinDelayOfJR {}),
        Box::new(super::jumps::conditionals::BGEZALNotTaken {}),
        Box::new(super::jumps::conditionals::BGEZALTaken {}),
        Box::new(super::jumps::conditionals::BGEZALThatChangesItsOwnCondition {}),
        Box::new(super::jumps::conditionals::BGEZALLNotTaken {}),
        Box::new(super::jumps::conditionals::BGEZALLTaken {}),
        Box::new(super::jumps::conditionals::BGEZALWithinDelay {}),
        Box::new(super::jumps::conditionals::BGEZALWithinDelayOfBEQ {}),
        Box::new(super::jumps::conditionals::BGEZALNotTakenWithinDelay {}),
        Box::new(super::jumps::j_and_jal::JWithinDelay {}),
        Box::new(super::jumps::j_and_jal::JALWithinDelay {}),
        Box::new(super::jumps::j_and_jal::JALDelayRAVisibility {}),
        Box::new(super::jumps::j_and_jal::JALWithinDelayOfJALR {}),
        Box::new(super::jumps::jr_and_jalr::JALRSimple {}),
        Box::new(super::jumps::jr_and_jalr::JALRWithSameRegister {}),
        Box::new(super::jumps::jr_and_jalr::JALRDelayRAVisibility {}),
        Box::new(super::jumps::jr_and_jalr::JRWithRegisterChangeInDelaySlot {}),
        Box::new(super::jumps::jr_and_jalr::JALRWithRegisterChangeInDelaySlot {}),
        Box::new(super::jumps::jr_and_jalr::JRWithinDelayOfJALR {}),
        Box::new(super::jumps::jr_and_jalr::JALRWithinDelayOfJALR {}),
        Box::new(super::overflow_exception::AddOverflowPositive {}),
        Box::new(super::overflow_exception::AddOverflowNegative {}),
        Box::new(super::overflow_exception::AddOverflowIntoR0 {}),
        Box::new(super::overflow_exception::AddOverflowDelaySlot1 {}),
        Box::new(super::overflow_exception::AddOverflowDelaySlot2 {}),
        Box::new(super::overflow_exception::DoubleAddOverflow {}),
        Box::new(super::overflow_exception::DoubleAddOverflowIntoR0 {}),
        Box::new(super::overflow_exception::SubOverflow {}),
        Box::new(super::overflow_exception::SubOverflowIntoR0 {}),
        Box::new(super::overflow_exception::DoubleSubOverflow {}),
        Box::new(super::overflow_exception::DoubleSubOverflowIntoR0 {}),
        Box::new(super::overflow_exception::AddImmediateOverflow {}),
        Box::new(super::overflow_exception::AddImmediateOverflowIntoR0 {}),
        Box::new(super::overflow_exception::DoubleAddImmediateOverflow {}),
        Box::new(super::overflow_exception::DoubleAddImmediateOverflowIntoR0 {}),
        Box::new(super::pif_memory::SW {}),
        Box::new(super::pif_memory::SH0 {}),
        Box::new(super::pif_memory::SH2 {}),
        Box::new(super::pif_memory::SB0 {}),
        Box::new(super::pif_memory::SB1 {}),
        Box::new(super::pif_memory::SB2 {}),
        Box::new(super::pif_memory::SB3 {}),
        Box::new(super::pif_memory::LB {}),
        Box::new(super::pif_memory::LH {}),

        Box::new(super::rdp::StartAndEndMasking {}),
        Box::new(super::rdp::StartIsValidFlag {}),
        Box::new(super::rdp::StatusFlagsDuringRun {}),
        Box::new(super::rdp::RunFromDMEM {}),
        Box::new(super::rdp::RunFromDMEMEnd {}),
        Box::new(super::rdp::RunFromDMEMOverflow {}),

        // The following are disabled for the time being as they are not stable on hardware yet
        // Box::new(super::rdp::filled_triangle::FilledTriangle1CycleDegenerateRect {}),
        // Box::new(super::rdp::filled_triangle::FilledTriangle1CycleRightMajorFlatTop {}),
        // Box::new(super::rdp::filled_triangle::FilledTriangle1CycleRightMajor {}),
        // Box::new(super::rdp::filled_triangle::FilledTriangle1CycleScissorLeft {}),
        // Box::new(super::rdp::filled_triangle::FilledTriangle1CycleScissorTop {}),
        // Box::new(super::rdp::filled_triangle::FilledTriangle1CycleScissorRight {}),
        // Box::new(super::rdp::filled_triangle::FilledTriangle1CycleScissorRightSubPixelPrecision {}),
        // Box::new(super::rdp::filled_triangle::FilledTriangle1CycleScissorBottom {}),
        // Box::new(super::rdp::filled_triangle::FilledTriangle1CycleScissorBottomSubPixelPrecision {}),
        // Box::new(super::rdp::filled_triangle::FilledTriangle1CycleNegativeYH {}),
        // Box::new(super::rdp::filled_triangle::FilledTriangle1CycleNegativeXL {}),
        // Box::new(super::rdp::filled_triangle::FilledTriangle1CycleRandomized {}),

        // This should be RSP test #1
        Box::new(super::rsp::PCRegMasking {}),
        // This should be RSP test #2
        Box::new(super::rsp::op_break::BREAK {}),
        Box::new(super::rsp::op_break::BREAKWithinDelay {}),
        Box::new(super::rsp::op_break::BREAKWithinDelay2 {}),
        // This should be RSP test #3
        Box::new(super::rsp::wrap_around::WrapAround {}),
        Box::new(super::rsp::ParallelRunning {}),
        // Non-vector instructions
        Box::new(super::rsp::op_add_addu::ADD {}),
        Box::new(super::rsp::op_add_addu::ADDU {}),
        Box::new(super::rsp::op_sub_subu::SUB {}),
        Box::new(super::rsp::op_sub_subu::SUBU {}),
        Box::new(super::rsp::op_addi::ADDI {}),
        Box::new(super::rsp::op_addiu::ADDIU {}),
        Box::new(super::rsp::op_andi::ANDI {}),
        Box::new(super::rsp::op_ori::ORI {}),
        Box::new(super::rsp::op_xori::XORI {}),
        Box::new(super::rsp::op_and::AND {}),
        Box::new(super::rsp::op_or::OR {}),
        Box::new(super::rsp::op_nor::NOR {}),
        Box::new(super::rsp::op_xor::XOR {}),
        Box::new(super::rsp::op_slt::SLT {}),
        Box::new(super::rsp::op_sltu::SLTU {}),
        Box::new(super::rsp::op_slti::SLTI {}),
        Box::new(super::rsp::op_sltiu::SLTIU {}),
        Box::new(super::rsp::op_lb::LB {}),
        Box::new(super::rsp::op_lh::LH {}),
        Box::new(super::rsp::op_lw::LW {}),
        Box::new(super::rsp::op_lbu::LBU {}),
        Box::new(super::rsp::op_lhu::LHU {}),
        Box::new(super::rsp::op_lwu::LWU {}),
        Box::new(super::rsp::op_sb::SB {}),
        Box::new(super::rsp::op_sh::SHAligned {}),
        Box::new(super::rsp::op_sh::SHUnaligned {}),
        Box::new(super::rsp::op_sw::SWAligned {}),
        Box::new(super::rsp::op_sw::SWUnaligned {}),
        Box::new(super::rsp::op_j::J {}),
        Box::new(super::rsp::op_jal::JAL {}),
        Box::new(super::rsp::op_jr_jalr::JR {}),
        Box::new(super::rsp::op_jr_jalr::JRWithRegisterChangeInDelaySlot {}),
        Box::new(super::rsp::op_jr_jalr::JALR {}),
        Box::new(super::rsp::op_jr_jalr::JALRWithRegisterChangeInDelaySlot {}),
        Box::new(super::rsp::op_jr_jalr::JALRWithReturnAddressChangeInDelaySlot {}),
        Box::new(super::rsp::op_jr_jalr::JALRWithReturnAddressEqualToTargetAddress {}),
        Box::new(super::rsp::op_branches::BEQ {}),
        Box::new(super::rsp::op_branches::BNE {}),
        Box::new(super::rsp::op_branches::BLEZ {}),
        Box::new(super::rsp::op_branches::BGTZ {}),
        Box::new(super::rsp::op_branches::BLTZ {}),
        Box::new(super::rsp::op_branches::BGEZ {}),
        Box::new(super::rsp::op_branches::BLTZAL {}),
        Box::new(super::rsp::op_branches::BLTZALTestRA {}),
        Box::new(super::rsp::op_branches::BGEZAL {}),
        Box::new(super::rsp::op_branches::BGEZALTestRA {}),
        Box::new(super::rsp::op_shifts::SLL {}),
        Box::new(super::rsp::op_shifts::SRL {}),
        Box::new(super::rsp::op_shifts::SRA {}),
        Box::new(super::rsp::op_shifts::SLLV {}),
        Box::new(super::rsp::op_shifts::SLLVWithShiftAmountOverwrite {}),
        Box::new(super::rsp::op_shifts::SRLV {}),
        Box::new(super::rsp::op_shifts::SRLVWithShiftAmountOverwrite {}),
        Box::new(super::rsp::op_shifts::SRAV {}),
        Box::new(super::rsp::op_shifts::SRAVWithShiftAmountOverwrite {}),

        // RSP Vector Store instructions
        Box::new(super::rsp::op_vector_stores::SBV {}),
        Box::new(super::rsp::op_vector_stores::SSV {}),
        Box::new(super::rsp::op_vector_stores::SLV {}),
        Box::new(super::rsp::op_vector_stores::SDV {}),
        Box::new(super::rsp::op_vector_stores::SQV {}),
        Box::new(super::rsp::op_vector_stores::SRV {}),
        Box::new(super::rsp::op_vector_stores::SPV {}),
        Box::new(super::rsp::op_vector_stores::SUV {}),
        Box::new(super::rsp::op_vector_stores::SHV {}),
        Box::new(super::rsp::op_vector_stores::SFV {}),
        Box::new(super::rsp::op_vector_stores::SWV {}),
        Box::new(super::rsp::op_vector_stores::STV {}),

        // RSP Vector Load instructions
        Box::new(super::rsp::op_cfc2_ctc2::CTC2CFC2 {}),
        Box::new(super::rsp::op_cfc2_ctc2::CFC2WeirdIndexes {}),
        Box::new(super::rsp::op_cfc2_ctc2::CTC2WeirdIndexes {}),
        Box::new(super::rsp::op_mfc2_mtc2::MTC2 {}),
        Box::new(super::rsp::op_mfc2_mtc2::MFC2 {}),
        Box::new(super::rsp::op_vector_loads::LBV {}),
        Box::new(super::rsp::op_vector_loads::LSV {}),
        Box::new(super::rsp::op_vector_loads::LSVOverflow {}),
        Box::new(super::rsp::op_vector_loads::LLV {}),
        Box::new(super::rsp::op_vector_loads::LLVOverflow {}),
        Box::new(super::rsp::op_vector_loads::LDV {}),
        Box::new(super::rsp::op_vector_loads::LDVOverflow {}),
        Box::new(super::rsp::op_vector_loads::LQV {}),
        Box::new(super::rsp::op_vector_loads::LQVEndOfDMEM {}),
        Box::new(super::rsp::op_vector_loads::LRV {}),
        Box::new(super::rsp::op_vector_loads::LRVStartOfDMEM {}),
        Box::new(super::rsp::op_vector_loads::LPV {}),
        Box::new(super::rsp::op_vector_loads::LPVEndOfDMEM {}),
        Box::new(super::rsp::op_vector_loads::LUV {}),
        Box::new(super::rsp::op_vector_loads::LUVEndOfDMEM {}),
        Box::new(super::rsp::op_vector_loads::LHV {}),
        Box::new(super::rsp::op_vector_loads::LHVEndOfDMEM {}),
        Box::new(super::rsp::op_vector_loads::LFV {}),
        Box::new(super::rsp::op_vector_loads::LWV {}),
        Box::new(super::rsp::op_vector_loads::LTV {}),

        // Other vector instructions
        Box::new(super::rsp::op_vector_arithmetic::VADD {}),
        Box::new(super::rsp::op_vector_arithmetic::VSUB {}),
        Box::new(super::rsp::op_vector_arithmetic::VSUT {}),
        Box::new(super::rsp::op_vector_arithmetic::VABS {}),
        Box::new(super::rsp::op_vector_arithmetic::VADDC {}),
        Box::new(super::rsp::op_vector_arithmetic::VSUBC {}),
        Box::new(super::rsp::op_vector_arithmetic::VADDB {}),
        Box::new(super::rsp::op_vector_arithmetic::VSUBB {}),
        Box::new(super::rsp::op_vector_arithmetic::VACCB {}),
        Box::new(super::rsp::op_vector_arithmetic::VSUCB {}),
        Box::new(super::rsp::op_vector_arithmetic::VSAD {}),
        Box::new(super::rsp::op_vector_arithmetic::VSAC {}),
        Box::new(super::rsp::op_vector_arithmetic::VSUM {}),
        Box::new(super::rsp::op_vector_arithmetic::VLT {}),
        Box::new(super::rsp::op_vector_arithmetic::VEQ {}),
        Box::new(super::rsp::op_vector_arithmetic::VNE {}),
        Box::new(super::rsp::op_vector_arithmetic::VGE {}),
        Box::new(super::rsp::op_vector_arithmetic::VMRG {}),
        Box::new(super::rsp::op_vector_arithmetic::VAND {}),
        Box::new(super::rsp::op_vector_arithmetic::VNAND {}),
        Box::new(super::rsp::op_vector_arithmetic::VOR {}),
        Box::new(super::rsp::op_vector_arithmetic::VNOR {}),
        Box::new(super::rsp::op_vector_arithmetic::VXOR {}),
        Box::new(super::rsp::op_vector_arithmetic::VNXOR {}),
        Box::new(super::rsp::op_vector_arithmetic::VNOP {}),
        Box::new(super::rsp::op_vector_arithmetic::VEXTT {}),
        Box::new(super::rsp::op_vector_arithmetic::VEXTQ {}),
        Box::new(super::rsp::op_vector_arithmetic::VEXTN {}),
        Box::new(super::rsp::op_vector_arithmetic::VINST {}),
        Box::new(super::rsp::op_vector_arithmetic::VINSQ {}),
        Box::new(super::rsp::op_vector_arithmetic::VINSN {}),
        Box::new(super::rsp::op_vector_arithmetic::VNULL {}),
        Box::new(super::rsp::op_vector_arithmetic::V30 {}),
        Box::new(super::rsp::op_vector_arithmetic::V31 {}),
        Box::new(super::rsp::op_vector_arithmetic::V46 {}),
        Box::new(super::rsp::op_vector_arithmetic::V47 {}),
        Box::new(super::rsp::op_vector_arithmetic::V59 {}),
        Box::new(super::rsp::op_vector_arithmetic::VCL {}),
        Box::new(super::rsp::op_vector_arithmetic::VCH {}),
        Box::new(super::rsp::op_vector_arithmetic::VCR {}),
        Box::new(super::rsp::op_vsar::VSAR {}),
        Box::new(super::rsp::op_vmacf::VMACFAll {}),
        Box::new(super::rsp::op_vmacf::VMACFH0 {}),
        Box::new(super::rsp::op_vmacf::VMACF5 {}),
        Box::new(super::rsp::op_vmacf::VMACFAccumulatorOverflowed {}),
        Box::new(super::rsp::op_vmacq::VMACQ {}),
        Box::new(super::rsp::op_vmacu::VMACUAll {}),
        Box::new(super::rsp::op_vmacu::VMACUH0 {}),
        Box::new(super::rsp::op_vmacu::VMACU0 {}),
        Box::new(super::rsp::op_vmacu::VMACUAccumulatorOverflowed {}),
        Box::new(super::rsp::op_vmadl::VMADLAll {}),
        Box::new(super::rsp::op_vmadl::VMADL4 {}),
        Box::new(super::rsp::op_vmadl::VMADLAccumulatorOverflowed {}),
        Box::new(super::rsp::op_vmadm::VMADMAll {}),
        Box::new(super::rsp::op_vmadm::VMADM4 {}),
        Box::new(super::rsp::op_vmadm::VMADMAccumulatorOverflowed {}),
        Box::new(super::rsp::op_vmadn::VMADNAll {}),
        Box::new(super::rsp::op_vmadn::VMADNH1 {}),
        Box::new(super::rsp::op_vmadn::VMADNH3 {}),
        Box::new(super::rsp::op_vmadn::VMADN6 {}),
        Box::new(super::rsp::op_vmadn::VMADNAccumulatorOverflowed {}),
        Box::new(super::rsp::op_vmadh::VMADHAll {}),
        Box::new(super::rsp::op_vmadh::VMADHQ1 {}),
        Box::new(super::rsp::op_vmadh::VMADHH1 {}),
        Box::new(super::rsp::op_vmadh::VMADH7 {}),
        Box::new(super::rsp::op_vmadh::VMADHAccumulatorOverflowed {}),
        Box::new(super::rsp::op_vmudh::VMUDHAll {}),
        Box::new(super::rsp::op_vmudh::VMUDHH0 {}),
        Box::new(super::rsp::op_vmudh::VMUDHQ1 {}),
        Box::new(super::rsp::op_vmudh::VMUDH7 {}),
        Box::new(super::rsp::op_vmudl::VMUDLAll {}),
        Box::new(super::rsp::op_vmudl::VMUDLH1 {}),
        Box::new(super::rsp::op_vmudl::VMUDL5 {}),
        Box::new(super::rsp::op_vmudm::VMUDMAll {}),
        Box::new(super::rsp::op_vmudm::VMUDMH1 {}),
        Box::new(super::rsp::op_vmudm::VMUDM7 {}),
        Box::new(super::rsp::op_vmudn::VMUDNAll {}),
        Box::new(super::rsp::op_vmudn::VMUDNH2 {}),
        Box::new(super::rsp::op_vmudn::VMUDN7 {}),
        Box::new(super::rsp::op_vmulf::VMULFAll {}),
        Box::new(super::rsp::op_vmulf::VMULFAll1 {}),
        Box::new(super::rsp::op_vmulf::VMULFH0 {}),
        Box::new(super::rsp::op_vmulf::VMULFH1 {}),
        Box::new(super::rsp::op_vmulu::VMULUAll {}),
        Box::new(super::rsp::op_vmulu::VMULUH1 {}),
        Box::new(super::rsp::op_vmulq::VMULQAll {}),
        Box::new(super::rsp::op_vmulq::VMULQH1 {}),
        Box::new(super::rsp::op_vmov_vrcp::VMOV {}),
        Box::new(super::rsp::op_vmov_vrcp::RCPTable {}),
        Box::new(super::rsp::op_vmov_vrcp::RSQTable {}),
        Box::new(super::rsp::op_vmov_vrcp::VRCPRegisterCombinations {}),
        Box::new(super::rsp::op_vmov_vrcp::VRCPHRegisterCombinations {}),
        Box::new(super::rsp::op_vmov_vrcp::VRCPLRegisterCombinations {}),
        Box::new(super::rsp::op_vmov_vrcp::VRSQRegisterCombinations {}),
        Box::new(super::rsp::op_vmov_vrcp::VRSQLRegisterCombinations {}),
        Box::new(super::rsp::op_vmov_vrcp::VRCPValues {}),
        Box::new(super::rsp::op_vmov_vrcp::VRSQValues {}),
        Box::new(super::rsp::op_vmov_vrcp::VRCP32Bit {}),
        Box::new(super::rsp::op_vmov_vrcp::VRSQ32Bit {}),
        Box::new(super::rsp::op_vmov_vrcp::HighUsesOutputVRCPTest {}),
        Box::new(super::rsp::op_vmov_vrcp::HighUsesOutputVRSQLTest {}),
        Box::new(super::rsp::op_vmov_vrcp::HighUsesOutputVRSQTest {}),
        Box::new(super::rsp::op_vmov_vrcp::HighUsesOutputVRSQLTest {}),
        Box::new(super::rsp::op_vmov_vrcp::VRCPHSetsInputForVRCPL {}),
        Box::new(super::rsp::op_vmov_vrcp::VRCPLHiddenRegisterFlagExists {}),
        Box::new(super::rsp::op_vrndp::VRNDPWithEvenVS {}),
        Box::new(super::rsp::op_vrndp::VRNDPWithOddVS {}),
        Box::new(super::rsp::op_vrndp::VRNDPOverwriteItselfWithElement {}),
        Box::new(super::rsp::op_vrndp::VRNDPAccumulatorOverflowed {}),
        Box::new(super::rsp::op_vrndn::VRNDNWithEvenVS {}),
        Box::new(super::rsp::op_vrndn::VRNDNWithOddVS {}),
        Box::new(super::rsp::op_vrndn::VRNDNOverwriteItselfWithElement {}),
        Box::new(super::rsp::op_vrndn::VRNDNAccumulatorOverflowed {}),
        Box::new(super::rsp::registers::SetClearInterrupt {}),
        Box::new(super::rsp::registers::SetClearHalt {}),
        Box::new(super::rsp::registers::SetClearSignal {}),
        Box::new(super::rsp::registers::SetClearInterruptOnBreak {}),
        Box::new(super::rsp::registers::SPRegisterReadAccessOnRSP {}),
        Box::new(super::rsp::registers::SemaphoreRegisterCPUOnly {}),
        Box::new(super::rsp::registers::SemaphoreRegisterRSPOnly {}),
        Box::new(super::rsp::registers::SemaphoreRegisterMixed {}),
        Box::new(super::rsp::registers::RSPHaltItselfWithoutBreak {}),
        Box::new(super::sp_memory::SW {}),
        Box::new(super::sp_memory::SWOutOfBounds {}),
        Box::new(super::sp_memory::SH {}),
        Box::new(super::sp_memory::SB {}),
        Box::new(super::sp_memory::SD {}),
        Box::new(super::sp_memory::LB {}),
        Box::new(super::sp_memory::LH {}),
        Box::new(super::sp_memory::dma::SPDMA0_8_7 {}),
        Box::new(super::sp_memory::dma::SPDMA0_12_7D {}),
        Box::new(super::sp_memory::dma::SPDMA0_12_7I {}),
        Box::new(super::sp_memory::dma::SPDMA4_8_7 {}),
        Box::new(super::sp_memory::dma::SPDMA0_8_11D {}),
        Box::new(super::sp_memory::dma::SPDMA0_8_11I {}),
        Box::new(super::sp_memory::dma::SPDMAIntoDMEMUntilEnd {}),
        Box::new(super::sp_memory::dma::SPDMAIntoDMEMWithOverflow {}),
        Box::new(super::sp_memory::dma::SPDMAIntoIMEMUntilEnd {}),
        Box::new(super::sp_memory::dma::SPDMAIntoIMEMWithOverflow {}),
        Box::new(super::sp_memory::dma::SPDMAFromDMEMWithOverflow {}),

        Box::new(super::tlb::WiredRandom {}),
        Box::new(super::tlb::WiredOutOfBoundsRandom {}),
        Box::new(super::tlb::WriteRandomExpectIgnored {}),
        Box::new(super::tlb::IndexMasking {}),
        Box::new(super::tlb::EntryLo0Masking {}),
        Box::new(super::tlb::EntryLo0Masking64 {}),
        Box::new(super::tlb::EntryLo1Masking {}),
        Box::new(super::tlb::EntryLo1Masking64 {}),
        Box::new(super::tlb::EntryHiMasking {}),
        Box::new(super::tlb::PageMaskMasking {}),
        Box::new(super::tlb::ConfigReadWrite {}),
        Box::new(super::tlb::TLBWriteReadPageMask {}),
        Box::new(super::tlb::TLBWriteReadBackEntry {}),
        Box::new(super::tlb::TLBUseTestRead0 {}),
        Box::new(super::tlb::TLBUseTestRead1 {}),
        Box::new(super::tlb::TLBUseTestReadMatchViaASID {}),
        Box::new(super::tlb::TLBPMatch {}),
        Box::new(super::tlb::exceptions::ReadMiss4k {}),
        Box::new(super::tlb::exceptions::ReadMiss16k {}),
        Box::new(super::tlb::exceptions::ReadMiss64k {}),
        Box::new(super::tlb::exceptions::ReadMiss256k {}),
        Box::new(super::tlb::exceptions::ReadMiss1M {}),
        Box::new(super::tlb::exceptions::ReadMiss4M {}),
        Box::new(super::tlb::exceptions::ReadMiss16M {}),
        Box::new(super::tlb::exceptions::StoreMiss4k {}),
        Box::new(super::tlb::exceptions::StoreMissMisaligned4k {}),
        Box::new(super::tlb::exceptions::ExecuteTLBMapped4k {}),
        Box::new(super::tlb::exceptions::ExecuteTLBMappedMiss {}),
        Box::new(super::tlb::exceptions::ExecuteTLBMappedMissInDelay {}),
        Box::new(super::tlb::exceptions::ReadNonValid4k {}),
        Box::new(super::tlb::exceptions::ReadNonValid4kInDelay {}),
        Box::new(super::tlb::exceptions::StoreNonValid4k {}),
        Box::new(super::tlb::exceptions::StoreNonDirty4k {}),
        Box::new(super::tlb::exceptions::StoreNonDirtyAndNonValid4k {}),
        Box::new(super::tlb::exceptions::LWTLBMissTest32 {}),
        Box::new(super::tlb64::AllLoads32BitAddress {}),
        Box::new(super::tlb64::AllLoads32BitAddressUncached {}),
        Box::new(super::tlb64::AllLoads0x90 {}),
        Box::new(super::tlb64::AllLoads0x98 {}),
        Box::new(super::tlb64::LimitsOf0x90 {}),
        Box::new(super::tlb64::TLB64Read {}),
        Box::new(super::tlb64::TLB64Execute {}),
        Box::new(super::tlb64::exceptions::LWAddressNotSignExtended {}),
        Box::new(super::tlb64::exceptions::SWAddressNotSignExtended {}),
        Box::new(super::tlb64::exceptions::TLBAndAddressError64 {}),
        Box::new(super::tlb64::exceptions::TLB64MissDueToR64Bit {}),
        Box::new(super::traps::TLT {}),
        Box::new(super::traps::TLTU {}),
        Box::new(super::traps::TGE {}),
        Box::new(super::traps::TGEU {}),
        Box::new(super::traps::TEQ {}),
        Box::new(super::traps::TNE {}),
        Box::new(super::traps::TEQI {}),
        Box::new(super::traps::TNEI {}),
        Box::new(super::traps::TGEI {}),
        Box::new(super::traps::TGEIU {}),
        Box::new(super::traps::TLTI {}),
        Box::new(super::traps::TLTIU {}),
        Box::new(super::traps::delay::TNEDelay1 {}),
        Box::new(super::traps::delay::TNEDelay2 {}),

        // This should be the overall last test
        Box::new(super::startup::TearDownTest {}),
    }
}

#[cfg(not(feature = "quick"))]
fn default_tests() -> Vec<Box<dyn Test>> {
    vec! {}
}

/// Returns a list of tests to be performed.
pub fn tests() -> Vec<Box<dyn Test>> {
    let mut result = default_tests();
    append_stress_tests(&mut result);
    result
}
